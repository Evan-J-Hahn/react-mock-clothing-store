{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evanh\\\\Desktop\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component'; // import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; // import CollectionPreview from '../../components/collection-preview/collection-preview.component'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    // const { updateCollections } = this.props\n    // const collectionRef = firestore.collection('collections')\n    fetch('https://firestore.googleapis.com/v2/projects/crown-db-2798f/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then(snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   updateCollections(collectionsMap)\n    //   this.setState({ loading: false })\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/evanh/Desktop/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","fetch","then","response","json","collections","console","log","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,uEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB,C,CACA;;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AAEAC,IAAAA,KAAK,CAAC,uGAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,WAAD,IAAiBC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFzB,EAJkB,CAOlB;AACA;AACA;AACA;AACA;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGD,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEZ;AAA3C,SAAwDY,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGD,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEZ;AAAtC,SAAmDY,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA/BoC;;AAkCvC,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,iBAAiB,EAAGuB,cAAD,IAAoBD,QAAQ,CAACtB,iBAAiB,CAACuB,cAAD,CAAlB;AADP,CAAf,CAA3B;;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components'\r\nimport CollectionPage from '../collection/collection.component'\r\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\nimport { connect } from 'react-redux'\r\nimport { updateCollections } from '../../redux/shop/shop.actions'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n// import CollectionPreview from '../../components/collection-preview/collection-preview.component'\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true\r\n  }\r\n\r\n  unSubscribeFromSnapshot = null\r\n\r\n  componentDidMount() {\r\n    // const { updateCollections } = this.props\r\n    // const collectionRef = firestore.collection('collections')\r\n\r\n    fetch('https://firestore.googleapis.com/v2/projects/crown-db-2798f/databases/(default)/documents/collections')\r\n      .then((response) => response.json())\r\n      .then((collections) => console.log(collections))\r\n    // collectionRef.get().then(snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n    //   updateCollections(collectionsMap)\r\n    //   this.setState({ loading: false })\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    const { loading } = this.state\r\n\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\r\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}